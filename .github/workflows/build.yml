name: Build TSL

on: [push, pull_request]

jobs:
  Windows:
    runs-on: windows-latest
    steps:
    - name: Checking Out Source Code
      uses: actions/checkout@v1
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Get Cache Directory
      id: cache-dir
      run: |
           echo ::set-output name=dir::%CD%
      shell: cmd
    - name: Load Dependencies from Cache
      uses: actions/cache@v1
      id: cache-dep
      with:
        path: ${{ steps.cache-dir.outputs.dir }}/dependencies
        key: Windows-dep-ver-7
    - name: Install Dependencies
      if: steps.cache-dep.outputs.cache-hit != 'true'
      run: make update_dep
      shell: cmd
    - name: Build Release Version
      run: make
      shell: cmd
    - name: Build Debug Version
      run: make debug
      shell: cmd
    - name: Unit test
      run: make test
      shell: cmd
  MacOs_Intel:
    runs-on: macOS-latest
    steps:
    - name: Checking Out Source Code
      uses: actions/checkout@v1
    - name: Configure Environment
      run: |
           brew install flex
           brew install bison
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.x'
            architecture: 'x64'
    - name: Get Cache Directory
      id: cache-dir
      run: |
           echo "::set-output name=dir::$(pwd)"
    - name: Load Dependencies from Cache
      uses: actions/cache@v1
      id: cache-dep
      with:
        path: ${{ steps.cache-dir.outputs.dir }}/dependencies
        key: MacOS-Intel-dep-ver-8
    - name: Install Dependencies
      if: steps.cache-dep.outputs.cache-hit != 'true'
      run: make update_dep ARCH=x86_64
    - name: Build Release Version
      run: |
           echo 'export PATH="/usr/local/opt/bison/bin:$PATH"' >> ~/.bash_profile
           source ~/.bash_profile
           bison -V
           make ARCH=x86_64
    - name: Build Debug Version
      run: |
           echo 'export PATH="/usr/local/opt/bison/bin:$PATH"' >> ~/.bash_profile
           source ~/.bash_profile
           bison -V
           make debug ARCH=x86_64
    - name: Verify Build
      run: |
           make verify_builds
    - name: Unit test
      run: make test
  MacOs_Apple_Silicon:
    runs-on: macOS-latest
    steps:
    - name: Checking Out Source Code
      uses: actions/checkout@v1
    - name: Configure Environment
      run: |
           brew install flex
           brew install bison
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.x'
            architecture: 'x64'
    - name: Get Cache Directory
      id: cache-dir
      run: |
           echo "::set-output name=dir::$(pwd)"
    - name: Load Dependencies from Cache
      uses: actions/cache@v1
      id: cache-dep
      with:
        path: ${{ steps.cache-dir.outputs.dir }}/dependencies
        key: MacOS-Apple-Silicon-dep-ver-8
    - name: Install Dependencies
      if: steps.cache-dep.outputs.cache-hit != 'true'
      run: make update_dep ARCH=arm64
    - name: Build Release Version
      run: |
           echo 'export PATH="/usr/local/opt/bison/bin:$PATH"' >> ~/.bash_profile
           source ~/.bash_profile
           bison -V
           make ARCH=arm64
    - name: Build Debug Version
      run: |
           echo 'export PATH="/usr/local/opt/bison/bin:$PATH"' >> ~/.bash_profile
           source ~/.bash_profile
           bison -V
           make debug ARCH=arm64
    - name: Verify Build
      run: |
           make verify_builds
  Ubuntu_20_04:
    runs-on: ubuntu-20.04
    steps:
    - name: Checking Out Source Code
      uses: actions/checkout@v1
    - name: Configure Environment
      run: |
           sudo apt-get install flex
           sudo apt-get install bison
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.x'
            architecture: 'x64'
    - name: Get Cache Directory
      id: cache-dir
      run: |
           echo "::set-output name=dir::$(pwd)"
    - name: Load Dependencies from Cache
      uses: actions/cache@v1
      id: cache-dep
      with:
        path: ${{ steps.cache-dir.outputs.dir }}/dependencies
        key: Ubuntu-Focal-dep-ver-7
    - name: Install Dependencies
      if: steps.cache-dep.outputs.cache-hit != 'true'
      run: make update_dep
    - name: Build Release Version
      run: make
    - name: Build Debug Version
      run: make debug
    - name: Verify Build
      run: |
           make verify_builds
    - name: Unit test
      run: make test
  Ubuntu_18_04:
    runs-on: ubuntu-18.04
    steps:
    - name: Checking Out Source Code
      uses: actions/checkout@v1
    - name: Configure Environment
      run: |
           sudo apt-get install flex
           sudo apt-get install bison
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.x'
            architecture: 'x64'
    - name: Get Cache Directory
      id: cache-dir
      run: |
           echo "::set-output name=dir::$(pwd)"
    - name: Load Dependencies from Cache
      uses: actions/cache@v1
      id: cache-dep
      with:
        path: ${{ steps.cache-dir.outputs.dir }}/dependencies
        key: Ubuntu-Binoic-dep-ver-7
    - name: Install Dependencies
      if: steps.cache-dep.outputs.cache-hit != 'true'
      run: make update_dep
    - name: Build Release Version
      run: make
    - name: Build Debug Version
      run: make debug
    - name: Verify Build
      run: |
           make verify_builds
    - name: Unit test
      run: make test
  Ubuntu_16_04:
    runs-on: ubuntu-16.04
    steps:
    - name: Checking Out Source Code
      uses: actions/checkout@v1
    - name: Configure Environment
      run: |
           sudo apt-get install flex
           sudo apt-get install bison
           sudo apt-get install -y software-properties-common
           sudo add-apt-repository ppa:ubuntu-toolchain-r/test
           sudo apt update
           sudo apt install g++-7 -y
           sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
           sudo update-alternatives --config gcc
           gcc --version
           g++ --version
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.x'
            architecture: 'x64'
    - name: Get Cache Directory
      id: cache-dir
      run: |
           echo "::set-output name=dir::$(pwd)"
    - name: Load Dependencies from Cache
      uses: actions/cache@v1
      id: cache-dep
      with:
        path: ${{ steps.cache-dir.outputs.dir }}/dependencies
        key: Ubuntu-Xenial-dep-ver-7
    - name: Install Dependencies
      if: steps.cache-dep.outputs.cache-hit != 'true'
      run: make update_dep
    - name: Build Release Version
      run: |
           mkdir proj_release
           cd proj_release
           cmake -DCMAKE_BUILD_TYPE=Release CC=gcc-7 CXX=g++-7 ..
           make -j 4
           cd ..
    - name: Build Debug Version
      run: |
           mkdir proj_debug
           cd proj_debug
           cmake -DCMAKE_BUILD_TYPE=Release CC=gcc-7 CXX=g++-7 ..
           make -j 4
           cd ..
    - name: Verify Build
      run: |
           make verify_builds
    - name: Unit test
      run: make test
